{"ast":null,"code":"var _jsxFileName = \"/Users/choeunyoung/Desktop/goorm-react/raect-context-app/client/src/context/OrderContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useMemo, useState } from \"react\";\n\n// Context 생성\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderContext = /*#__PURE__*/createContext();\n\n//\nexport function OrderContextProvider(props) {\n  _s();\n  const [orderCounts, setOrderCounts] = useState({\n    products: new Map(),\n    options: new Map()\n  });\n  const [total, setTotal] = useState({\n    products: 0,\n    options: 0,\n    total: 0\n  });\n  const value = useMemo(() => {\n    function updateItemCount(itemName, newItemCount, optionType) {\n      const oldOrderMap = orderCounts[optionType];\n      const newOrderMap = new Map(oldOrderMap);\n      newOrderMap.set(itemName, parseInt(newItemCount));\n      const newOrderCounts = {\n        ...orderCounts\n      };\n      newOrderCounts[optionType] = newOrderMap;\n      setOrderCounts(newOrderCounts);\n    }\n    return [{\n      ...orderCounts\n    }, updateItemCount];\n  }, [orderCounts]);\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: value,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n_s(OrderContextProvider, \"+k8poI19UdnF+OSznVt3o/fBMzQ=\");\n_c = OrderContextProvider;\nvar _c;\n$RefreshReg$(_c, \"OrderContextProvider\");","map":{"version":3,"names":["createContext","useMemo","useState","jsxDEV","_jsxDEV","OrderContext","OrderContextProvider","props","_s","orderCounts","setOrderCounts","products","Map","options","total","setTotal","value","updateItemCount","itemName","newItemCount","optionType","oldOrderMap","newOrderMap","set","parseInt","newOrderCounts","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/choeunyoung/Desktop/goorm-react/raect-context-app/client/src/context/OrderContext.js"],"sourcesContent":["import { createContext, useMemo, useState } from \"react\";\n\n// Context 생성\nexport const OrderContext = createContext();\n\n//\nexport function OrderContextProvider(props) {\n  const [orderCounts, setOrderCounts] = useState({\n    products: new Map(),\n    options: new Map(),\n  });\n\n  const [total, setTotal] = useState({\n    products: 0,\n    options: 0,\n    total: 0,\n  });\n\n  const value = useMemo(() => {\n    function updateItemCount(itemName, newItemCount, optionType) {\n      const oldOrderMap = orderCounts[optionType];\n      const newOrderMap = new Map(oldOrderMap);\n\n      newOrderMap.set(itemName, parseInt(newItemCount));\n\n      const newOrderCounts = { ...orderCounts };\n      newOrderCounts[optionType] = newOrderMap;\n\n      setOrderCounts(newOrderCounts);\n    }\n\n    return [{ ...orderCounts }, updateItemCount];\n  }, [orderCounts]);\n\n  return <OrderContext.Provider value={value} {...props} />;\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;;AAE3C;AACA,OAAO,SAASM,oBAAoBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC;IAC7CS,QAAQ,EAAE,IAAIC,GAAG,CAAC,CAAC;IACnBC,OAAO,EAAE,IAAID,GAAG,CAAC;EACnB,CAAC,CAAC;EAEF,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC;IACjCS,QAAQ,EAAE,CAAC;IACXE,OAAO,EAAE,CAAC;IACVC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAME,KAAK,GAAGf,OAAO,CAAC,MAAM;IAC1B,SAASgB,eAAeA,CAACC,QAAQ,EAAEC,YAAY,EAAEC,UAAU,EAAE;MAC3D,MAAMC,WAAW,GAAGZ,WAAW,CAACW,UAAU,CAAC;MAC3C,MAAME,WAAW,GAAG,IAAIV,GAAG,CAACS,WAAW,CAAC;MAExCC,WAAW,CAACC,GAAG,CAACL,QAAQ,EAAEM,QAAQ,CAACL,YAAY,CAAC,CAAC;MAEjD,MAAMM,cAAc,GAAG;QAAE,GAAGhB;MAAY,CAAC;MACzCgB,cAAc,CAACL,UAAU,CAAC,GAAGE,WAAW;MAExCZ,cAAc,CAACe,cAAc,CAAC;IAChC;IAEA,OAAO,CAAC;MAAE,GAAGhB;IAAY,CAAC,EAAEQ,eAAe,CAAC;EAC9C,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EAEjB,oBAAOL,OAAA,CAACC,YAAY,CAACqB,QAAQ;IAACV,KAAK,EAAEA,KAAM;IAAA,GAAKT;EAAK;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC3D;AAACtB,EAAA,CA7BeF,oBAAoB;AAAAyB,EAAA,GAApBzB,oBAAoB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}